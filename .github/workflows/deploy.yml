name: Deploy master

on:
  workflow_dispatch:
  push:
    branches:
      - master
      

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.GHCR_TOKEN }}
      - run: |
          IMAGE_USER=$(echo "${GITHUB_ACTOR}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${IMAGE_USER}/capybara-link"
          docker build \
            -t "${IMAGE_NAME}:latest" \
            -t "${IMAGE_NAME}:${GITHUB_SHA}" \
            .

      - name: Push Docker image (by SHA)
        run: |
          USER_LOWER=$(echo "${GITHUB_ACTOR}" | tr '[:upper:]' '[:lower:]')
          docker push "ghcr.io/${USER_LOWER}/capybara-link:${GITHUB_SHA}"

      - name: Push Docker image (latest)
        run: |
          USER_LOWER=$(echo "${GITHUB_ACTOR}" | tr '[:upper:]' '[:lower:]')
          docker push "ghcr.io/${USER_LOWER}/capybara-link:latest"


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    env:
      SSH_KEY_PATH: /tmp/ssh_key
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Create production .env
        run: |
          cat <<EOF > .env
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          APP_HOST=${{ secrets.APP_HOST }}
          MEDIA_UPLOAD_CODE=${{ secrets.MEDIA_UPLOAD_CODE }}
          SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          GITHUB_SHA=${GITHUB_SHA}
          EOF
  
      - name: Install SSH key
        run: |
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > $SSH_KEY_PATH
          chmod 600 $SSH_KEY_PATH
  
      - name: Ensure remote dir exists
        run: |
          ssh -o StrictHostKeyChecking=no \
              -i $SSH_KEY_PATH \
              root@${{ secrets.PRODUCTION_SSH_HOST }} \
              "mkdir -p /root/infomate.club"
  
      - name: Copy .env to server
        run: |
          scp -o StrictHostKeyChecking=no \
              -i $SSH_KEY_PATH \
              .env \
              root@${{ secrets.PRODUCTION_SSH_HOST }}:/root/infomate.club/.env
  
      - name: Copy docker-compose to server
        run: |
          scp -o StrictHostKeyChecking=no \
              -i $SSH_KEY_PATH \
              docker-compose.production.yml \
              root@${{ secrets.PRODUCTION_SSH_HOST }}:/root/infomate.club/docker-compose.production.yml
  
      - name: SSH & deploy
        run: |
          IMAGE_USER=$(echo "${GITHUB_ACTOR}" | tr '[:upper:]' '[:lower:]')
          ssh -o StrictHostKeyChecking=no \
              -i $SSH_KEY_PATH \
              root@${{ secrets.PRODUCTION_SSH_HOST }} "
            cd /root/infomate.club && \
            echo '${{ secrets.GHCR_TOKEN }}' | docker login ghcr.io -u $IMAGE_USER --password-stdin && \
            docker pull ghcr.io/$IMAGE_USER/capybara-link:${GITHUB_SHA} && \
            docker-compose -f docker-compose.production.yml --env-file .env up -d && \
            docker system prune --all --force
          "
